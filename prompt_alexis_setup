#! /bin/sh
#
# TODO
#
# Authors:
#   Alexis BRENON
#

get_absolute_dirname() {
  SOURCE="$1"
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [ "$SOURCE" != "/*" ] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done
  ( cd -P "$( dirname "$SOURCE" )" && pwd )
  unset DIR
  unset SOURCE
}

get_current_shell() {
  # We cannot rely on the SHELL value which is not updated when launching a different shell
  if [ -n "${BASH}" ]; then basename "${BASH}"
  elif [ -n "${ZSH_NAME}" ]; then echo "${ZSH_NAME}"
  fi
}

PROMPT_ALEXIS_PATH=${PROMPT_ALEXIS_PATH:-}
for ARG in "${PROMPT_ALEXIS_PATH}" "$0" "$1" "$_" "$(command -V "$0" | sed 's#.*from /#/#')"; do
  TEST_PATH="$(get_absolute_dirname "$ARG")"
  if [ -e "${TEST_PATH}/prompt_alexis_setup" ]; then
    PROMPT_ALEXIS_PATH="${TEST_PATH}"
    break;
  fi
done
unset TEST_PATH

prompt_alexis_setup() {
  if [ -e "${PROMPT_ALEXIS_PATH}/prompt_alexis_setup" ]; then
    . "${PROMPT_ALEXIS_PATH}/setup/posix.sh"
    f_prompt_alexis_posix_setup "$@"

    l_prompt_alexis_current_shell="$(get_current_shell)"
    if [ -e "${PROMPT_ALEXIS_PATH}/setup/${l_prompt_alexis_current_shell}.sh" ]; then
      . "${PROMPT_ALEXIS_PATH}/setup/${l_prompt_alexis_current_shell}.sh"
      "f_prompt_alexis_${l_prompt_alexis_current_shell}_setup"
    fi
    unset l_prompt_alexis_current_shell
  fi
}
prompt_alexis_setup "$@"

unset get_current_shell
unset get_absolute_dirname
